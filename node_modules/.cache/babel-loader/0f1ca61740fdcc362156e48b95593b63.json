{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension'; //Reducers\n\nimport { cartReducer } from './reducers/cartReducers';\nimport { getProductsReducer, getProductDetailsReducer } from './reducers/productReducers';\nconst reducer = combineReducers({\n  cart: cartReducer,\n  getProducts: getProductsReducer,\n  getProductDetails: getProductDetailsReducer\n});\nconst middleware = [thunk]; //<-- it helps to make async request inside the actions\n\nconst cartFromLocalStorage = localStorage.getItem('cart') ? JSON.parse(localStorage.getItem('cart')) : [];\nconst INITIAL_STATE = {\n  cart: {\n    cartItem: cartFromLocalStorage\n  }\n};\nconst store = createStore(reducer, INITIAL_STATE, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/ASUS/ecommerce/frontend/src/redux/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","cartReducer","getProductsReducer","getProductDetailsReducer","reducer","cart","getProducts","getProductDetails","middleware","cartFromLocalStorage","localStorage","getItem","JSON","parse","INITIAL_STATE","cartItem","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC,C,CACA;;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,kBAAT,EAA6BC,wBAA7B,QAA6D,4BAA7D;AAGA,MAAMC,OAAO,GAAGP,eAAe,CAAC;AAC5BQ,EAAAA,IAAI,EAAEJ,WADsB;AAE5BK,EAAAA,WAAW,EAAEJ,kBAFe;AAG5BK,EAAAA,iBAAiB,EAAEJ;AAHS,CAAD,CAA/B;AAMA,MAAMK,UAAU,GAAG,CAACT,KAAD,CAAnB,C,CAA4B;;AAE5B,MAAMU,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,IAA+BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAA/B,GAA0E,EAAvG;AAEA,MAAMG,aAAa,GAAG;AAClBT,EAAAA,IAAI,EAAE;AACFU,IAAAA,QAAQ,EAAEN;AADR;AADY,CAAtB;AAMA,MAAMO,KAAK,GAAGpB,WAAW,CACrBQ,OADqB,EAErBU,aAFqB,EAGrBd,mBAAmB,CAACF,eAAe,CAAC,GAAGU,UAAJ,CAAhB,CAHE,CAAzB;AAMA,eAAeQ,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n//Reducers\r\nimport { cartReducer } from './reducers/cartReducers';\r\nimport { getProductsReducer, getProductDetailsReducer } from './reducers/productReducers';\r\n\r\n\r\nconst reducer = combineReducers({\r\n    cart: cartReducer,\r\n    getProducts: getProductsReducer,\r\n    getProductDetails: getProductDetailsReducer\r\n})\r\n\r\nconst middleware = [thunk]; //<-- it helps to make async request inside the actions\r\n\r\nconst cartFromLocalStorage = localStorage.getItem('cart') ? JSON.parse(localStorage.getItem('cart')) : []\r\n\r\nconst INITIAL_STATE = {\r\n    cart: {\r\n        cartItem: cartFromLocalStorage\r\n    }\r\n}\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    INITIAL_STATE,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}