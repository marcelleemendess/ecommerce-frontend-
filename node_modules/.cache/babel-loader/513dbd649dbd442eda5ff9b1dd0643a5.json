{"ast":null,"code":"import _toConsumableArray from\"C:/Users/ASUS/ecommerce/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"C:/Users/ASUS/ecommerce/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import*as actionTypes from'../constants/cartConstants';export var cartReducer=function cartReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{cartItems:[]};var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case actionTypes.ADD_TO_CART:var item=action.payload;//item to add\nvar existItem=state.cartItems.find(function(x){return x.product===item.product;});if(existItem){return _objectSpread(_objectSpread({},state),{},{cartItems:state.cartItems.map(function(x){return x.product===existItem.product?item:x;})});}else{return _objectSpread(_objectSpread({},state),{},{cartItems:[].concat(_toConsumableArray(state.cartItems),[item])});}case actionTypes.REMOVE_TO_CART:return _objectSpread(_objectSpread({},state),{},{cartItems:state.cartItems.filter(function(x){return x.product!==action.payload;})});default:return state;}};","map":{"version":3,"sources":["C:/Users/ASUS/ecommerce/frontend/src/redux/reducers/cartReducers.js"],"names":["actionTypes","cartReducer","state","cartItems","action","type","ADD_TO_CART","item","payload","existItem","find","x","product","map","REMOVE_TO_CART","filter"],"mappings":"qTAAA,MAAO,GAAKA,CAAAA,WAAZ,KAA6B,4BAA7B,CAEA,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAsC,IAArCC,CAAAA,KAAqC,2DAA7B,CAAEC,SAAS,CAAE,EAAb,CAA6B,IAAXC,CAAAA,MAAW,2CAC7D,OAAQA,MAAM,CAACC,IAAf,EACI,IAAKL,CAAAA,WAAW,CAACM,WAAjB,CACI,GAAMC,CAAAA,IAAI,CAAGH,MAAM,CAACI,OAApB,CAA6B;AAE7B,GAAMC,CAAAA,SAAS,CAAGP,KAAK,CAACC,SAAN,CAAgBO,IAAhB,CAAqB,SAACC,CAAD,QAAOA,CAAAA,CAAC,CAACC,OAAF,GAAcL,IAAI,CAACK,OAA1B,EAArB,CAAlB,CAEA,GAAIH,SAAJ,CAAe,CACX,sCACOP,KADP,MAEIC,SAAS,CAAED,KAAK,CAACC,SAAN,CAAgBU,GAAhB,CAAoB,SAACF,CAAD,QAAOA,CAAAA,CAAC,CAACC,OAAF,GAAcH,SAAS,CAACG,OAAxB,CAAkCL,IAAlC,CAAyCI,CAAhD,EAApB,CAFf,GAIH,CALD,IAKO,CACH,sCACOT,KADP,MAEIC,SAAS,8BAAMD,KAAK,CAACC,SAAZ,GAAuBI,IAAvB,EAFb,GAIH,CACL,IAAKP,CAAAA,WAAW,CAACc,cAAjB,CACI,sCACOZ,KADP,MAEIC,SAAS,CAAED,KAAK,CAACC,SAAN,CAAgBY,MAAhB,CAAuB,SAACJ,CAAD,QAAOA,CAAAA,CAAC,CAACC,OAAF,GAAcR,MAAM,CAACI,OAA5B,EAAvB,CAFf,GAKJ,QACI,MAAON,CAAAA,KAAP,CAxBR,CA0BH,CA3BM","sourcesContent":["import * as actionTypes from '../constants/cartConstants';\r\n\r\nexport const cartReducer = (state = { cartItems: []}, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_TO_CART:\r\n            const item = action.payload; //item to add\r\n\r\n            const existItem = state.cartItems.find((x) => x.product === item.product);\r\n\r\n            if (existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map((x) => x.product === existItem.product ? item : x)\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n        case actionTypes.REMOVE_TO_CART:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter((x) => x.product !== action.payload)\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}